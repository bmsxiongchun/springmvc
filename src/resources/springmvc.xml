<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 使用spring组件扫描 一次性配置此包下所有的handler -->
    <context:component-scan base-package="controller"/>

    <!--<mvc:annotation-driven>-->
        <!--<mvc:message-converters>-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
        <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->

    <!-- mvc的注解驱动器， 通过他可以代替下边的处理器映射器和适配器 -->
    <!--<mvc:annotation-driven conversion-service="conversionService"/>-->

    <!-- 转换器 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="utils.StringTrimConverter"/>
                <bean class="utils.CustomDateConverter"/>
            </list>
        </property>
    </bean>

    <!-- 注解处理器映射器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>

    <!-- 注解的适配器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="webBindingInitializer" ref="customBinder"/>
         <!--加入json数据的消息转换器 MappingJacksonHttpMessageConverter依赖两个包 -->
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- Json转换 -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=utf-8</value>
                <value>application/x-www-form-urlencoded</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>



    <!-- 配置视图解析器 要求将jstl的包加到classpath
        prefix:代表请求的url的前缀
        suffix:代表请求的url的后缀
        设置了这两个属性值后我们在controller中进行代码开发时返回的modelAndView对象设置的页面路径值就不用带前缀名和后缀名了
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="customPropertyEditor" class="utils.CustomPropertyEditor"/>
    <bean id="customBinder" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
        <property name="conversionService" ref="conversionService"/>
        <!--<property name="propertyEditorRegistrars">-->
            <!--<list>-->
                <!--<ref bean="customPropertyEditor"/>-->
            <!--</list>-->
        <!--</property>-->
        <property name="validator" ref="validator"/>
    </bean>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>CustomValidationMessages</value>
            </list>
        </property>
        <property name="fileEncodings" value="utf-8"/>
        <property name="cacheSeconds" value="120"/>
    </bean>

    <!--<mvc:default-servlet-handler />-->
    <!--<mvc:resources mapping="/js/**.js" location="/js/"/>-->

    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸 -->
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>
</beans>